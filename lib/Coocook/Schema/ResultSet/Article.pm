package Coocook::Schema::ResultSet::Article;

use Moose;
use MooseX::MarkAsMethods autoclean => 1;

extends 'Coocook::Schema::ResultSet';

__PACKAGE__->load_components('+Coocook::Schema::Component::ResultSet::SortByName');

__PACKAGE__->meta->make_immutable;

# TODO replace by autogenerated code from Component::Result::ResultsetRelationships
sub article_tags {
    my $self = shift;

    return $self->result_source->schema->resultset('ArticleTag')
      ->search( { 'article' => { -in => $self->get_column('id')->as_query } } );
}

# TODO replace by autogenerated code from Component::Result::ResultsetRelationships
sub articles_units {
    my $self = shift;

    return $self->result_source->schema->resultset('ArticleUnit')
      ->search( { 'article' => { -in => $self->get_column('id')->as_query } } );
}

sub tags {    # TODO replace by autogenerated code from Component::Result::ResultsetRelationships
    my $self = shift;

    return $self->result_source->schema->resultset('Tag')
      ->search( { 'articles_tags.article' => { -in => $self->get_column('id')->as_query } },
        { join => 'articles_tags' } );
}

1;
